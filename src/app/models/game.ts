import * as _ from "lodash";
import { RNG } from "../utilities/RNG";
import { GameCommand, GameCommandType } from "./game-command";
import { Grid } from "./Grid";
import { TileColor } from "./tile-color";

export class Game {
    grid: Grid;
    rng: RNG = new RNG("color-connect");

    constructor(width: number, height: number, public levelNumber: number) {
        this.grid = new Grid(width, height, []);

        //levelNumber starts at 1
        this.rng.skip(this.solvableLevelMap[levelNumber - 1]);
        //this.rng.skip(levelNumber);
        for (let i = 0; i < this.grid.width; i++) {
            this.grid.tiles.push([]);
            for (let j = 0; j < this.grid.height; j++) {
                this.grid.tiles[i].push(Math.floor(this.rng.nextRand() * 3) + 1);
            }
        }
    }

    private solvableLevelMap:number[] = [1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,43,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,121,122,123,124,125,129,130,131,132,135,137,138,139,140,141,142,143,145,148,152,156,159,160,163,164,167,168,170,171,172,173,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,200,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,230,231,232,233,234,235,236,237,238,240,242,243,244,246,249,250,251,252,255,256,257,268,273,274,275,276,277,278,279,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,305,307,311,312,313,314,317,318,319,321,332,334,337,338,339,340,341,342,343,344,345,346,347,349,350,353,355,356,357,359,360,361,363,364,367,370,371,372,373,374,375,376,377,378,380,382,385,387,388,392,394,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,489,491,492,494,495,497,498,499,500,501,502,505,506,507,508,509,510,513,514,515,516,517,520,522,524,527,528,529,530,531,534,536,537,539,540,541,542,543,544,547,550,553,554,555,556,557,558,559,560,561,562,563,566,567,568,569,570,571,572,573,574,575,577,578,579,581,582,586,588,589,592,593,594,595,596,599,600,601,602,603,606,607,608,609,610,611,613,614,615,616,617,618,622,623,624,625,627,628,629,630,631,632,633,634,635,636,638,639,641,642,643,645,646,647,648,649,650,652,654,655,656,657,659,660,661,662,663,664,666,667,668,669,670,671,673,675,676,677,678,680,681,682,683,684,686,687,688,689,690,691,692,693];
}
